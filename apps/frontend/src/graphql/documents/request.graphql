mutation NewRequest($request: NewRequestArgs!) {
  newRequest(request: $request)
}

mutation NewResponse($response: NewResponseArgs!) {
  newResponse(response: $response)
}

mutation NewEvolveRequest($request: NewEvolveRequestArgs!) {
  newEvolveRequest(request: $request)
}

query getRequest($requestId: String!) {
  getRequest(requestId: $requestId) {
    ...Request
  }
}

mutation EndRequestStep($requestStepId: String!) {
  endRequestStep(requestStepId: $requestStepId)
}

query getRequestSteps(
  $cursor: String
  $limit: Int!
  $userOnly: Boolean!
  $flowId: String
  $groupId: String
  $searchQuery: String!
  $statusFilter: RequestStepStatusFilter!
  $respondPermissionFilter: RequestStepRespondPermissionFilter!
) {
  getRequestSteps(
    cursor: $cursor
    limit: $limit
    userOnly: $userOnly
    flowId: $flowId
    groupId: $groupId
    searchQuery: $searchQuery
    statusFilter: $statusFilter
    respondPermissionFilter: $respondPermissionFilter
  ) {
    ...RequestStepSummary
  }
}

fragment Request on Request {
  name
  creator {
    ...UserSummaryParts
  }
  flow {
    ...Flow
  }
  requestId
  currentStepIndex
  createdAt
  steps {
    ...RequestStep
  }
  final
}

fragment RequestStep on RequestStep {
  requestStepId
  createdAt
  expirationDate
  requestFieldAnswers {
    ...FieldAnswer
  }
  responseFieldAnswers {
    ...UserFieldAnswers
  }
  responseFields {
    ...Field
  }
  userResponses {
    ...Response
  }
  results {
    ...Result
  }
  actionExecution {
    ...ActionExecution
  }
  responseComplete
  resultsComplete
  final
}

fragment RequestStepSummary on RequestStepSummary {
  id
  requestStepId
  requestId
  flowId
  requestName
  flowName
  userResponded
  creator {
    ...UserSummaryParts
  }
  respondPermission {
    ...Permission
  }
  userRespondPermission
  stepIndex
  totalSteps
  createdAt
  expirationDate
  responseComplete
  resultsComplete
  actionsComplete
  final
}

fragment Response on Response {
  responseId
  createdAt
  creator {
    ...Entity
  }
  answers {
    ...FieldAnswer
  }
}
