enum ResultGroupStatus {
  NotStarted
  Preliminary
  Attempting
  Error
  FinalResult
  FinalNoResult
}

type ResultGroup {
  id: String!
  createdAt: String!
  resultConfigId: String!
  complete: Boolean!
  status: ResultGroupStatus!
  results: [Result!]!
}

type Result {
  id: String!
  name: String!
  type: ResultType!
  resultItems: [ResultItem!]!
}

type ResultItem {
  id: String!
  value: Value!
  optionId: String
}

union ResultConfig = Decision | Ranking | LlmSummary | RawAnswers

type Decision {
  resultConfigId: String!
  name: String!
  field: Field!
  criteria: String
  decisionType: DecisionType!
  defaultOption: Option
  threshold: Int
}

type Ranking {
  resultConfigId: String!
  name: String!
  field: Field!
  numOptionsToInclude: Int
}

type LlmSummary {
  resultConfigId: String!
  name: String!
  field: Field!
  prompt: String!
  isList: Boolean!
}

type RawAnswers {
  resultConfigId: String!
  name: String!
  field: Field!
}

# mirrors Prisma type
enum ResultType {
  Decision
  Ranking
  LlmSummary
  RawAnswers
}

# mirrors Prisma type
enum DecisionType {
  NumberThreshold
  PercentageThreshold
  WeightedAverage
  Ai
}

input ResultArgs {
  type: ResultType!
  resultConfigId: String!
  fieldId: String!
  decision: DecisionArgs
  prioritization: PrioritizationArgs
  llmSummary: LlmSummaryArgs
}

input DecisionArgs {
  type: DecisionType!
  defaultOptionId: String
  criteria: String
  threshold: Int
}

input PrioritizationArgs {
  numPrioritizedItems: Int
}

input LlmSummaryArgs {
  prompt: String!
  isList: Boolean!
}
