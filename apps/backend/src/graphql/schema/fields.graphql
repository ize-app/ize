type FieldSet {
  fields: [Field!]!
  locked: Boolean!
}

union Field = Options | FreeInput

input FieldAnswerArgs {
  fieldId: String!
  value: String
  optionSelections: [OptionSelectionArgs!]
}

input OptionSelectionArgs {
  # for FE UI
  optionId: String
  # for Telegram polls
  optionIndex: Int
}

type Options {
  fieldId: String!
  name: String!
  required: Boolean!
  isInternal: Boolean!
  previousStepOptions: Boolean!
  requestOptionsDataType: FieldDataType
  systemType: SystemFieldType
  selectionType: OptionSelectionType!
  maxSelections: Int
  linkedResultOptions: [LinkedResult!]!
  options: [Option!]!
}

type LinkedResult {
  resultConfigId: String!
  resultName: String!
  fieldId: String!
  fieldName: String!
}

type FreeInput {
  fieldId: String!
  name: String!
  isInternal: Boolean!
  required: Boolean!
  systemType: SystemFieldType
  dataType: FieldDataType!
  defaultAnswer: FieldAnswer
}

type Option {
  optionId: String!
  name: String!
  dataType: FieldDataType!
}

# Should match prisma enum by same name
enum FieldDataType {
  String
  Number
  Uri
  Date
  DateTime
  FlowVersionId
  EntityIds
  FlowIds
  Webhook
}

enum SystemFieldType {
  EvolveFlowProposed
  EvolveFlowCurrent
  EvolveFlowDescription
  GroupName
  GroupDescription
  GroupMembers
  WatchFlow
  UnwatchFlow
}

enum FieldType {
  Options
  FreeInput
}

enum OptionSelectionType {
  Rank
  MultiSelect
  Select
}

union FieldAnswer =
  | OptionFieldAnswer
  | FreeInputFieldAnswer
  | EntitiesFieldAnswer
  | FlowsFieldAnswer
  | WebhookFieldAnswer

type OptionFieldAnswer {
  selections: [OptionFieldAnswerSelection!]!
}

type FreeInputFieldAnswer {
  value: String!
}

type EntitiesFieldAnswer {
  entities: [Entity!]!
}

type FlowsFieldAnswer {
  flows: [FlowReference!]!
}

type WebhookFieldAnswer {
  uri: String!
  webhookId: String
  originalUri: String
  name: String
}

type UserFieldAnswer {
  creator: Entity!
  createdAt: String!
  answer: FieldAnswer!
}

type ResponseFieldAnswers {
  field: Field!
  answers: [UserFieldAnswer!]!
  summary: ResponseFieldAnswersSummary!
}

type ResponseFieldAnswersSummary {
  count: Int!
  options: [ResponseFieldAnswersOptionsSummary!]
}

type ResponseFieldAnswersOptionsSummary {
  optionId: String!
  count: Int!
  rank: Float
}

type TriggerFieldAnswer {
  field: Field!
  answer: UserFieldAnswer
}

# later will use this type to add option free inputs
type OptionFieldAnswerSelection {
  optionId: String!
  weight: Int!
}

input FieldSetArgs {
  fields: [FieldArgs!]!
  locked: Boolean!
}

input FieldArgs {
  fieldId: String!
  type: FieldType!
  name: String!
  required: Boolean!
  isInternal: Boolean!
  systemType: SystemFieldType
  freeInputDataType: FieldDataType
  optionsConfig: FieldOptionsConfigArgs
}

input FieldOptionsConfigArgs {
  previousStepOptions: Boolean!
  requestOptionsDataType: FieldDataType
  maxSelections: Int
  selectionType: OptionSelectionType!
  linkedResultOptions: [LinkedResultOptionsArgs!]!
  options: [FieldOptionArgs!]!
}

input FieldOptionArgs {
  optionId: String
  dataType: FieldDataType!
  name: String!
}

input LinkedResultOptionsArgs {
  resultIndex: Int!
  stepIndex: Int!
}
