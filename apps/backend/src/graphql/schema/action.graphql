type Mutation {
  testWebhook(inputs: TestWebhookArgs!): Boolean!
}

union Action = CallWebhook | EvolveFlow | TriggerStep | GroupUpdateMetadata | GroupUpdateMembership

type ActionExecution {
  actionId: String!
  lastAttemptedAt: String
  status: Status!
}

type CallWebhook {
  filterOption: Option
  uri: String!
  name: String!
}

type EvolveFlow {
  filterOption: Option
}

type TriggerStep {
  filterOption: Option
}

type GroupUpdateMetadata {
  filterOption: Option
}

type GroupUpdateMembership {
  filterOption: Option
}

# mirrors Prisma type + "None" type
enum ActionType {
  CallWebhook
  TriggerStep
  EvolveFlow
  GroupUpdateMetadata
  GroupUpdateMembership
  None
}

input CallWebhookArgs {
  uri: String!
  name: String!
}

input ActionArgs {
  type: ActionType!
  filterResponseFieldIndex: Int
  filterOptionIndex: Int
  callWebhook: CallWebhookArgs
}

input TestWebhookArgs {
  flowName: String!
  uri: String!
  requestFields: [WebhookValueArgs!]!
  results: [WebhookValueArgs!]!
}

type WebhookPayload {
  flowName: String!
  requestName: String!
  createdAt: String!
  requestFields: [WebhookValue!]!
  results: [WebhookValue!]!
}

type WebhookValue {
  fieldName: String!
  value: String
  optionSelections: [String!]
}

input WebhookValueArgs {
  fieldName: String!
  fieldType: FieldType!
}
