type Mutation {
  newProcess(process: newProcessArgs!): String!
  newEditProcessRequest(inputs: newEditProcessRequestArgs!): String!
}

type Query {
  process(processId: String!): Process!
  processesForCurrentUser(
    requestRoleOnly: Boolean!
    groups: [String!]
  ): [Process!]!
  processesForGroup(groupId: String!): [Process!]!
  groupsAndUsersEliglbeForRole: [Agent!]!
}

input newProcessArgs {
  name: String!
  description: String
  options: [ProcessOptionArgs!]!
  inputs: [InputTemplateArgs!]!
  decision: DecisionArgs!
  roles: [RoleArgs!]!
  action: ActionArgs
  evolve: EvolveArgs!
}

input ActionArgs {
  optionTrigger: String
  webhook: WebhookActionArgs!
}

input WebhookActionArgs {
  uri: String!
}

input DecisionArgs {
  expirationSeconds: Int!
  absoluteDecision: AbsoluteDecisionArgs
  percentageDecision: PercentageDecisionArgs
}

input EvolveArgs {
  decision: DecisionArgs!
  roles: [RoleArgs!]!
}

input newEditProcessRequestArgs {
  processId: String!
  name: String
  description: String
  expirationSeconds: Int
  options: [ProcessOptionArgs!]
  inputs: [InputTemplateArgs!]
  decision: DecisionArgs
  roles: [RoleArgs!]
  action: ActionArgs
  editProcessId: String
}

input ProcessOptionArgs {
  value: String!
  type: OptionType!
}

type Process {
  id: String!
  currentProcessVersionId: String!
  name: String!
  description: String
  expirationSeconds: Int!
  creator: User!
  options: [ProcessOption!]!
  inputs: [InputTemplate!]!
  action: Action
  roles: Roles!
  decisionSystem: DecisionTypes!
  # not making evolve required because the evolve process needs to leave out
  # it's own edit process to avoid infinite recursion
  evolve: Process
  createdAt: String!
}

type ProcessOption {
  id: String!
  value: String!
  type: OptionType!
}

type Action {
  id: String!
  optionFilter: ProcessOption
  actionDetails: ActionType
}

union ActionType = WebhookAction | EvolveProcessAction

type WebhookAction {
  uri: String!
}

# using an object is useful here for the union of ActionType, but GraphQL doesn't let you add empty object
# so I'm adding a dummy field here to allow it to work
type EvolveProcessAction {
  _: Boolean
}

enum OptionType {
  Int
  Float
  Text
  Uri
}

input InputTemplateArgs {
  name: String!
  type: InputDataType!
  description: String
  required: Boolean!
}

type InputTemplate {
  id: String!
  name: String!
  type: InputDataType!
  description: String
  required: Boolean!
}

enum InputDataType {
  Int
  Float
  Text
  Uri
}

input RoleArgs {
  agentType: AgentType!
  type: RoleType!
  id: String!
}

union Agent = User | Group

type Roles {
  request: [Agent!]!
  respond: [Agent!]!
  edit: Agent
}

enum RoleType {
  Request
  Respond
}

enum AgentType {
  User
  Group
}

union DecisionTypes = AbsoluteDecision | PercentageDecision

type AbsoluteDecision {
  threshold: Int!
}

type PercentageDecision {
  percentage: Float!
  quorum: Int!
}

input AbsoluteDecisionArgs {
  threshold: Int!
}

input PercentageDecisionArgs {
  percentage: Float!
  quorum: Int!
}
