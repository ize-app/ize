type Mutation {
  newFlow(flow: NewFlowArgs!): String!
}

type Query {
  flow(processId: String!): Process!
}

input NewFlowArgs {
  name: String!
  reusable: Boolean!
  steps: [NewStepArgs!]!
  evolve: EvolveFlowArgs
}

input NewStepArgs {
  request: StepRequestArgs
  response: StepResponseArgs
  result: ResultArgs!
  action: ActionNewArgs!
}

input EvolveFlowArgs {
  requestPermission: PermissionArgs!
  responsePermission: PermissionArgs!
  decision: DecisionNewArgs!
}

input StepRequestArgs {
  fields: [FieldArgs!]!
  permission: PermissionArgs!
}

input StepResponseArgs {
  fields: [FieldArgs!]!
  permission: PermissionArgs!
}

input PermissionArgs {
  anyone: Boolean!
  entities: [EntityArgs!]
}

input EntityArgs {
  id: String!
}
