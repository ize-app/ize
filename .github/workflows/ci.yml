# .github/workflows/deploy.yml
name: Test, lint and push to main

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      # Avoids installing husky during CI
      HUSKY: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install
        working-directory: ./

      - name: Generate GraphQL code
        run: npm run codegen
        working-directory: ./

      - name: Create tables in the database and database types
        run: npx prisma db push
        working-directory: ./apps/backend

      - name: Lint
        run: npm run lint
        working-directory: ./
  deploy:
    # only deploys if push to the main branch
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    # only runs if build-and-test job is successful
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$RENDER_DEPLOY_HOOK_URL"
